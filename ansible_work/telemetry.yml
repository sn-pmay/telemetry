- hosts: fs-centos, fs-onl
  tasks:
    - fail: Stop if the hostname hasn't been changed from localhost|(none)
      when: ansible_hostname == "localhost" or
        ansible_hostname == "(none)"
      msg: The hostname is set to either "localhost" or "(none)". Please fix before enabling telemetry.

    - fail: Stop if the architecture is not AMD64
      when: ansible_architecture != x86_64
      msg: Currently, only x86_64 is supported

    - name: Check if Adam's custom telegraf is there
      stat: path=/usr/bin/telegraf_adam
      register: telegraf_custom
      tags:
          - telegraf_custom_check

    - name: Copy Adam's custom telegraf into /usr/bin
      when:
        - telegraf_custom.stat.exists == false
      copy:
        src: telegraf/telegraf_adam
        dest: /usr/bin/telegraf_adam
        mode: a+x
      tags:
        - telegraf_copy_custom

- hosts: fs-centos
  tasks:
    - name: Copy telegraf distribution (RPM)
      copy:
        src: telegraf/telegraf-1.3.1-1.x86_64.rpm
        dest: /tmp/telegraf-1.3.1-1.x86_64.rpm
      tags:
        - telegraf_copy_rpm

- hosts: fs-onl
  tasks:
    - name: Copy telegraf distribution (DEB)
      copy:
        src: telegraf/telegraf_1.3.1-1_amd64.deb
        dest: /tmp/telegraf_1.3.1-1.x86_64.deb
      tags:
        - telegraf_copy_deb

    - name: Check if telegraf is installed
      shell: dpkg-query -W \"telegraf\" >/dev/null 2>&1
      ignore_errors: true
      register: telegraf_not_installed_deb

    - name: Install telegraf from DEB
      apt: deb="/tmp/telegraf_1.3.1-1.x86_64.deb"
      when: telegraf_not_installed_deb
      register: telegraf_deb_installed


- hosts: fs-centos, fs-onl
  tasks:
    - name: Register original telegraf binary
      stat: path=/usr/bin/telegraf
      register: telegraf

    - name: Move telegraf binary aside
      command: mv /usr/bin/telegraf /usr/bin/telegraf.dist
      when: telegraf.stat.islnk is defined and telegraf.stat.islnk == False

    - name: Create a telegraf symlink
      file:
        src: /usr/bin/telegraf_adam
        dest: /usr/bin/telegraf
        state: link
      when: telegraf_custom.stat.exists is defined

    - name: Register telegraf config path
      stat: path=/etc/telegraf/telegraf.conf
      register: telegraf_conf

    - name: Copy telegraf master config
      copy:
        src: telegraf/telegraf.conf
        dest: /etc/telegraf/
        backup: yes
      when: telegraf_conf.stat.exists

    - name: Copy telegraf modular configs
      copy:
        src: telegraf/telegraf.d
        dest: /etc/telegraf/
        backup: yes
      notify: Restart telegraf
      when: telegraf_conf.stat.exists

    - name: Copy Grafana JSON files 
      copy:
        src: grafana
        dest: /tmp/
      tags:
        - grafana_copy_json
        
    - name: Install Grafana datasource file
      uri:
        body: "{{ lookup ('file','grafana/datasource.json') }}"
        # body: "{{ lookup ('file','/tmp/grafana/datasource.json') }}"
        method: POST
        url: http://172.250.0.101:3000/api/datasources
        body_format: json
        # This is for a PoC, so the default Grafana username/password are used.
        # If this exists in PROD, that'd be wrong, and you should feel BAD. 
        user: "admin"
        password: "admin"
        force_basic_auth: yes
        validate_certs: no
        return_content: yes
      tags:
        - grafana_install_datasource

    - name: Install Grafana dashboards
      with_fileglob: grafana/dashboard_*json
      uri:
        body: "{{ lookup ('file',item) }}"
        method: POST
        url: http://172.250.0.101:3000/api/dashboards/db
        body_format: json
        # This is for a PoC, so the default Grafana username/password are used.
        # If this exists in PROD, that'd be wrong, and you should feel BAD. 
        user: "admin"
        password: "admin"
        force_basic_auth: yes
        validate_certs: no
        return_content: yes
      tags:
        - grafana_install_dashboards
  handlers:
  - name: Restart telegraf
    service: name=telegraf enabled=yes state=restarted
